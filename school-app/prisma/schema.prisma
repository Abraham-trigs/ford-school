generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(cuid())
  name      String
  email     String      @unique
  password  String?
  role      SchoolRole
  phone     String?
  dob       DateTime?
  gender    String?
  photoUrl  String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  // Relations
  teacherClasses      Class[]      @relation("TeacherClasses")       // Classes this user teaches
  children            User[]       @relation("ParentChildren")       // Children of this parent
  parent              User?        @relation("ParentChildren", fields: [parentId], references: [id]) // Parent of this student
  parentId            String?                                       // optional, only for STUDENT
  classesAttended     Class[]      @relation("ClassStudents")       // Classes this student is enrolled in
  attendanceAsStudent Attendance[] @relation("AttendanceStudent")   // Attendance of this student
  attendanceRecorded  Attendance[] @relation("AttendanceRecorder")  // Attendance recorded by this user
}

model Class {
  id        String   @id @default(cuid())
  name      String
  teacherId String?  // optional in case class not assigned yet
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  teacher   User?    @relation("TeacherClasses", fields: [teacherId], references: [id])
  students  User[]   @relation("ClassStudents")
  attendances Attendance[] @relation("ClassAttendances") // back-relation for Attendance
}
model Attendance {
  id           String    @id @default(cuid())
  studentId    String
  classId      String
  date         DateTime
  status       AttendanceStatus
  note         String?
  createdAt    DateTime  @default(now())
  recordedById String

  // Relations
  class       Class @relation("ClassAttendances", fields: [classId], references: [id])
  student     User  @relation("AttendanceStudent", fields: [studentId], references: [id])
  recordedBy  User  @relation("AttendanceRecorder", fields: [recordedById], references: [id])
}
enum SchoolRole {
  STUDENT
  PARENT
  TEACHER
  ADMIN
  HEADMASTER
  PROPRIETOR
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  LATE
  EXCUSED
}
